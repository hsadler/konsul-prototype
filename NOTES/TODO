

TODO

- CODE CLEANUP: remove unnecessary player-input -> factory-entity operations by unity-events

- workers removing a partially built structure's constituent parts and storing

- removal of a structure by a worker should result in dump of inventory to space

- implement factory structures:
    - Furnace
    - Refinery

- take some new videos

- implement Assembler
    - requesting items from storages:
        - ex: an assembler need 5 iron and 5 copper to make a distributor. how does it get these items?

- structure io filter:
    - The ability to apply either an include or exclude filter list to an existing structure-io
    - UX:
        - select structure
        - tab to desired io
        - press edit-key to enter structure-io-edit mode
        - select either include or exclude filter type
        - select factory-entities from a list of icons in order to build the filter list
        - press back-key to back out of structure-io-edit mode
    - requirements:
        - structure-io-edit mode player control
        - edit mode modal
        - io-filter type selection buttons
        - io-filter fe-type icons to add or remove from filter
        - io-filter clear button to remove filter from the selected io

- add music

- test and polish workers:
    - worker shouldn't fetch items if already in inventory
    - workers shouldn't deliver to storages marked for removal
    - worker should build structures from materials, not just placement
    - worker actions should take time:
        - rotating
        - retrieving
        - depositing
        - placing
        - building

- POC early game progression:
    - figure out initial setting
    - player gets basic factory working
    - player begins expanding production
    - player harnesses the power of the sun
    
- POC power gathering from stars:
    - Photovoltaic
    - Mirror
    - PowerCell


- Bugs and Code Cleanup:
    - factory-structures without resource-io behavior should not be able to go into transit-mode
    - I'm probably using interfaces incorrectly. Research and possibly refactor to using classes and inheritance instead.


For consideration/prioritization:
    - give in-transit entities a TTL
    - consider a freeze-time control
    - consider different tiers of power gathering
        (though prob not for prototype)


- CLI gameplay:
    - TODO


Improvements and Polish:
    - polish black hole, need high-rez sprite image
    - prevent star overlap by implementing p-system buffer during generation
    - prevent planetary system overlap with black hole
    
